//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eshopBL.rs.kimtec.b2b {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="B2BProductServiceSoap", Namespace="http://www.msan.hr/B2B/")]
    public partial class B2BProductService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetProductsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsGalleryListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPriceListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsPriceListBySalesChannelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsSpecificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsSpecificationIceCatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsReplacementListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsRelatedListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsBarcodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsCategoryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public B2BProductService() {
            this.Url = global::eshopBL.Properties.Settings.Default.eshopBL_rs_kimtec_b2b_B2BProductService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProductsListCompletedEventHandler GetProductsListCompleted;
        
        /// <remarks/>
        public event GetProductsGalleryListCompletedEventHandler GetProductsGalleryListCompleted;
        
        /// <remarks/>
        public event GetProductsPriceListCompletedEventHandler GetProductsPriceListCompleted;
        
        /// <remarks/>
        public event GetProductsPriceListBySalesChannelCompletedEventHandler GetProductsPriceListBySalesChannelCompleted;
        
        /// <remarks/>
        public event GetProductsAvailabilityCompletedEventHandler GetProductsAvailabilityCompleted;
        
        /// <remarks/>
        public event GetProductsSpecificationCompletedEventHandler GetProductsSpecificationCompleted;
        
        /// <remarks/>
        public event GetProductsSpecificationIceCatCompletedEventHandler GetProductsSpecificationIceCatCompleted;
        
        /// <remarks/>
        public event GetProductsReplacementListCompletedEventHandler GetProductsReplacementListCompleted;
        
        /// <remarks/>
        public event GetProductsRelatedListCompletedEventHandler GetProductsRelatedListCompleted;
        
        /// <remarks/>
        public event GetProductsBarcodesCompletedEventHandler GetProductsBarcodesCompleted;
        
        /// <remarks/>
        public event GetCategoriesListCompletedEventHandler GetCategoriesListCompleted;
        
        /// <remarks/>
        public event GetProductsCategoryCompletedEventHandler GetProductsCategoryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsList", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsList(string ProductCode, string ProductType) {
            object[] results = this.Invoke("GetProductsList", new object[] {
                        ProductCode,
                        ProductType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsListAsync(string ProductCode, string ProductType) {
            this.GetProductsListAsync(ProductCode, ProductType, null);
        }
        
        /// <remarks/>
        public void GetProductsListAsync(string ProductCode, string ProductType, object userState) {
            if ((this.GetProductsListOperationCompleted == null)) {
                this.GetProductsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsListOperationCompleted);
            }
            this.InvokeAsync("GetProductsList", new object[] {
                        ProductCode,
                        ProductType}, this.GetProductsListOperationCompleted, userState);
        }
        
        private void OnGetProductsListOperationCompleted(object arg) {
            if ((this.GetProductsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsListCompleted(this, new GetProductsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsGalleryList", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsGalleryList(string ProductCode, string ProductType) {
            object[] results = this.Invoke("GetProductsGalleryList", new object[] {
                        ProductCode,
                        ProductType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsGalleryListAsync(string ProductCode, string ProductType) {
            this.GetProductsGalleryListAsync(ProductCode, ProductType, null);
        }
        
        /// <remarks/>
        public void GetProductsGalleryListAsync(string ProductCode, string ProductType, object userState) {
            if ((this.GetProductsGalleryListOperationCompleted == null)) {
                this.GetProductsGalleryListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsGalleryListOperationCompleted);
            }
            this.InvokeAsync("GetProductsGalleryList", new object[] {
                        ProductCode,
                        ProductType}, this.GetProductsGalleryListOperationCompleted, userState);
        }
        
        private void OnGetProductsGalleryListOperationCompleted(object arg) {
            if ((this.GetProductsGalleryListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsGalleryListCompleted(this, new GetProductsGalleryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsPriceList", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsPriceList(string ProductCode, string ProductType, string Brand, bool OnPromotion) {
            object[] results = this.Invoke("GetProductsPriceList", new object[] {
                        ProductCode,
                        ProductType,
                        Brand,
                        OnPromotion});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPriceListAsync(string ProductCode, string ProductType, string Brand, bool OnPromotion) {
            this.GetProductsPriceListAsync(ProductCode, ProductType, Brand, OnPromotion, null);
        }
        
        /// <remarks/>
        public void GetProductsPriceListAsync(string ProductCode, string ProductType, string Brand, bool OnPromotion, object userState) {
            if ((this.GetProductsPriceListOperationCompleted == null)) {
                this.GetProductsPriceListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPriceListOperationCompleted);
            }
            this.InvokeAsync("GetProductsPriceList", new object[] {
                        ProductCode,
                        ProductType,
                        Brand,
                        OnPromotion}, this.GetProductsPriceListOperationCompleted, userState);
        }
        
        private void OnGetProductsPriceListOperationCompleted(object arg) {
            if ((this.GetProductsPriceListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPriceListCompleted(this, new GetProductsPriceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsPriceListBySalesChannel", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsPriceListBySalesChannel(string ProductCode, string ProductType, string Brand, bool OnPromotion, int salesChannelID) {
            object[] results = this.Invoke("GetProductsPriceListBySalesChannel", new object[] {
                        ProductCode,
                        ProductType,
                        Brand,
                        OnPromotion,
                        salesChannelID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsPriceListBySalesChannelAsync(string ProductCode, string ProductType, string Brand, bool OnPromotion, int salesChannelID) {
            this.GetProductsPriceListBySalesChannelAsync(ProductCode, ProductType, Brand, OnPromotion, salesChannelID, null);
        }
        
        /// <remarks/>
        public void GetProductsPriceListBySalesChannelAsync(string ProductCode, string ProductType, string Brand, bool OnPromotion, int salesChannelID, object userState) {
            if ((this.GetProductsPriceListBySalesChannelOperationCompleted == null)) {
                this.GetProductsPriceListBySalesChannelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsPriceListBySalesChannelOperationCompleted);
            }
            this.InvokeAsync("GetProductsPriceListBySalesChannel", new object[] {
                        ProductCode,
                        ProductType,
                        Brand,
                        OnPromotion,
                        salesChannelID}, this.GetProductsPriceListBySalesChannelOperationCompleted, userState);
        }
        
        private void OnGetProductsPriceListBySalesChannelOperationCompleted(object arg) {
            if ((this.GetProductsPriceListBySalesChannelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsPriceListBySalesChannelCompleted(this, new GetProductsPriceListBySalesChannelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsAvailability", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsAvailability(string ProductCode) {
            object[] results = this.Invoke("GetProductsAvailability", new object[] {
                        ProductCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAvailabilityAsync(string ProductCode) {
            this.GetProductsAvailabilityAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductsAvailabilityAsync(string ProductCode, object userState) {
            if ((this.GetProductsAvailabilityOperationCompleted == null)) {
                this.GetProductsAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsAvailabilityOperationCompleted);
            }
            this.InvokeAsync("GetProductsAvailability", new object[] {
                        ProductCode}, this.GetProductsAvailabilityOperationCompleted, userState);
        }
        
        private void OnGetProductsAvailabilityOperationCompleted(object arg) {
            if ((this.GetProductsAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsAvailabilityCompleted(this, new GetProductsAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsSpecification", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsSpecification(string ProductCode, string ProductType) {
            object[] results = this.Invoke("GetProductsSpecification", new object[] {
                        ProductCode,
                        ProductType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsSpecificationAsync(string ProductCode, string ProductType) {
            this.GetProductsSpecificationAsync(ProductCode, ProductType, null);
        }
        
        /// <remarks/>
        public void GetProductsSpecificationAsync(string ProductCode, string ProductType, object userState) {
            if ((this.GetProductsSpecificationOperationCompleted == null)) {
                this.GetProductsSpecificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsSpecificationOperationCompleted);
            }
            this.InvokeAsync("GetProductsSpecification", new object[] {
                        ProductCode,
                        ProductType}, this.GetProductsSpecificationOperationCompleted, userState);
        }
        
        private void OnGetProductsSpecificationOperationCompleted(object arg) {
            if ((this.GetProductsSpecificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsSpecificationCompleted(this, new GetProductsSpecificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsSpecificationIceCat", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsSpecificationIceCat(string ProductCode, string ProductType) {
            object[] results = this.Invoke("GetProductsSpecificationIceCat", new object[] {
                        ProductCode,
                        ProductType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsSpecificationIceCatAsync(string ProductCode, string ProductType) {
            this.GetProductsSpecificationIceCatAsync(ProductCode, ProductType, null);
        }
        
        /// <remarks/>
        public void GetProductsSpecificationIceCatAsync(string ProductCode, string ProductType, object userState) {
            if ((this.GetProductsSpecificationIceCatOperationCompleted == null)) {
                this.GetProductsSpecificationIceCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsSpecificationIceCatOperationCompleted);
            }
            this.InvokeAsync("GetProductsSpecificationIceCat", new object[] {
                        ProductCode,
                        ProductType}, this.GetProductsSpecificationIceCatOperationCompleted, userState);
        }
        
        private void OnGetProductsSpecificationIceCatOperationCompleted(object arg) {
            if ((this.GetProductsSpecificationIceCatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsSpecificationIceCatCompleted(this, new GetProductsSpecificationIceCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsReplacementList", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsReplacementList(string ProductCode) {
            object[] results = this.Invoke("GetProductsReplacementList", new object[] {
                        ProductCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsReplacementListAsync(string ProductCode) {
            this.GetProductsReplacementListAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductsReplacementListAsync(string ProductCode, object userState) {
            if ((this.GetProductsReplacementListOperationCompleted == null)) {
                this.GetProductsReplacementListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsReplacementListOperationCompleted);
            }
            this.InvokeAsync("GetProductsReplacementList", new object[] {
                        ProductCode}, this.GetProductsReplacementListOperationCompleted, userState);
        }
        
        private void OnGetProductsReplacementListOperationCompleted(object arg) {
            if ((this.GetProductsReplacementListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsReplacementListCompleted(this, new GetProductsReplacementListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsRelatedList", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsRelatedList(string ProductCode) {
            object[] results = this.Invoke("GetProductsRelatedList", new object[] {
                        ProductCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsRelatedListAsync(string ProductCode) {
            this.GetProductsRelatedListAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductsRelatedListAsync(string ProductCode, object userState) {
            if ((this.GetProductsRelatedListOperationCompleted == null)) {
                this.GetProductsRelatedListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsRelatedListOperationCompleted);
            }
            this.InvokeAsync("GetProductsRelatedList", new object[] {
                        ProductCode}, this.GetProductsRelatedListOperationCompleted, userState);
        }
        
        private void OnGetProductsRelatedListOperationCompleted(object arg) {
            if ((this.GetProductsRelatedListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsRelatedListCompleted(this, new GetProductsRelatedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsBarcodes", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsBarcodes(string ProductCode) {
            object[] results = this.Invoke("GetProductsBarcodes", new object[] {
                        ProductCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsBarcodesAsync(string ProductCode) {
            this.GetProductsBarcodesAsync(ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductsBarcodesAsync(string ProductCode, object userState) {
            if ((this.GetProductsBarcodesOperationCompleted == null)) {
                this.GetProductsBarcodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsBarcodesOperationCompleted);
            }
            this.InvokeAsync("GetProductsBarcodes", new object[] {
                        ProductCode}, this.GetProductsBarcodesOperationCompleted, userState);
        }
        
        private void OnGetProductsBarcodesOperationCompleted(object arg) {
            if ((this.GetProductsBarcodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsBarcodesCompleted(this, new GetProductsBarcodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetCategoriesList", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategoriesList(int CategoryTypeID) {
            object[] results = this.Invoke("GetCategoriesList", new object[] {
                        CategoryTypeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesListAsync(int CategoryTypeID) {
            this.GetCategoriesListAsync(CategoryTypeID, null);
        }
        
        /// <remarks/>
        public void GetCategoriesListAsync(int CategoryTypeID, object userState) {
            if ((this.GetCategoriesListOperationCompleted == null)) {
                this.GetCategoriesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesListOperationCompleted);
            }
            this.InvokeAsync("GetCategoriesList", new object[] {
                        CategoryTypeID}, this.GetCategoriesListOperationCompleted, userState);
        }
        
        private void OnGetCategoriesListOperationCompleted(object arg) {
            if ((this.GetCategoriesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesListCompleted(this, new GetCategoriesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.msan.hr/B2B/GetProductsCategory", RequestNamespace="http://www.msan.hr/B2B/", ResponseNamespace="http://www.msan.hr/B2B/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProductsCategory(int CategoryTypeID, string ProductCode) {
            object[] results = this.Invoke("GetProductsCategory", new object[] {
                        CategoryTypeID,
                        ProductCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsCategoryAsync(int CategoryTypeID, string ProductCode) {
            this.GetProductsCategoryAsync(CategoryTypeID, ProductCode, null);
        }
        
        /// <remarks/>
        public void GetProductsCategoryAsync(int CategoryTypeID, string ProductCode, object userState) {
            if ((this.GetProductsCategoryOperationCompleted == null)) {
                this.GetProductsCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsCategoryOperationCompleted);
            }
            this.InvokeAsync("GetProductsCategory", new object[] {
                        CategoryTypeID,
                        ProductCode}, this.GetProductsCategoryOperationCompleted, userState);
        }
        
        private void OnGetProductsCategoryOperationCompleted(object arg) {
            if ((this.GetProductsCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCategoryCompleted(this, new GetProductsCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsListCompletedEventHandler(object sender, GetProductsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsGalleryListCompletedEventHandler(object sender, GetProductsGalleryListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsGalleryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsGalleryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsPriceListCompletedEventHandler(object sender, GetProductsPriceListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPriceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPriceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsPriceListBySalesChannelCompletedEventHandler(object sender, GetProductsPriceListBySalesChannelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsPriceListBySalesChannelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsPriceListBySalesChannelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsAvailabilityCompletedEventHandler(object sender, GetProductsAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsSpecificationCompletedEventHandler(object sender, GetProductsSpecificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsSpecificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsSpecificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsSpecificationIceCatCompletedEventHandler(object sender, GetProductsSpecificationIceCatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsSpecificationIceCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsSpecificationIceCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsReplacementListCompletedEventHandler(object sender, GetProductsReplacementListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsReplacementListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsReplacementListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsRelatedListCompletedEventHandler(object sender, GetProductsRelatedListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsRelatedListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsRelatedListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsBarcodesCompletedEventHandler(object sender, GetProductsBarcodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsBarcodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsBarcodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCategoriesListCompletedEventHandler(object sender, GetCategoriesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductsCategoryCompletedEventHandler(object sender, GetProductsCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591